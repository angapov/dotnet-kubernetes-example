name: Deployment to Kubernetes

on: [push, workflow_dispatch]

env:
  REGISTRY: ghcr.io
  HELM_RELEASE_NAME: ${{ github.event.repository.name }}-${{ github.ref_name }}
  KUBERNETES_NAMESPACE: ${{ github.event.repository.name }}-${{ github.ref_name }}

jobs:
  container-image-build:
    runs-on: arc-runner-set
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Build and push container image with Kaniko
        uses: aevea/action-kaniko
        with:
          image: ${{ env.REGISTRY}}/${{ github.repository }}:${{ github.ref_name }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

  deployment-to-kubernetes:
    runs-on: arc-runner-set
    needs: container-image-build
    container:
      image: alpine/k8s:1.28.7
    permissions:
      contents: read
    steps:
    - name: Deployment to Kubernetes
      run: |
        git clone -b ${{ github.ref_name }} https://${{ github.actor }}:${{ github.token }}@github.com/${{ github.repository }}.git
        cd ${{ github.event.repository.name }}
        kubectl create namespace $KUBERNETES_NAMESPACE >/dev/null || true
        kubectl -n $KUBERNETES_NAMESPACE create secret docker-registry ghcr-pull-secret \
          --docker-server=ghcr.io \
          --docker-username=${{ github.repository_owner }} \
          --docker-password=${{ secrets.GHCR_TOKEN }} >/dev/null || true
        helm upgrade --install $HELM_RELEASE_NAME kubernetes \
          --namespace $KUBERNETES_NAMESPACE \
          --set image.repository=$IMAGE_NAME \
          --set image.tag=$IMAGE_TAG \
          --set imagePullSecrets[0]=ghcr-pull-secret \
          --set ports[0].containerPort=8080 \
          --set service.containerPort=8080
